===========================================http 状态码=================================================

created 星期六  11 7月 2015

http://tool.oschina.net/commons?type=5
https://blog.csdn.net/q1056843325/article/details/53147180
rubydoc.info/github/rake/rake/master/Rake/Utils

===================================状态码对应含义========================

响应类别                http状态码              符号               含义
           
成功                       200                   :ok                               请求已成功，所希望的数据将随响应返回

                           201                   :created                          请求已经被实现，而且发送的新资源已经按需创建

                           202                   :accepted                         服务器已经接受请求，但是尚未处理。
                                                                                   在异步情况下返回202目的是允 许服务器接受其它过程的请求，
                                                                                   而不必让客户端一直保持与服务器的连接。
                                                                                   返回202状态码同时应该在返回的实体中包含一些只是当前状态的信息以判断是否完成

                           203                   :non_authoritative_information    (非授权信息）服务器经成功处理请求，但返回的信息来自本地或者第三方的拷贝

                           204                   :no_content                      表示请求已成功处理，但是没有内容返回（本来就没啥内容要返回的情况），也就是返回的响应报文中没有报文内容，
                                                                                   一般用在客户端向服务器发送消息，而服务器不用客户端返回什么信息的情况。浏览器继续显示原来文档

                           205                   :reset_content                    服务器成功处理了请求，且没有返回任何内容，与204不同的是需要清除表单内容，主要作用是：强制浏览器清除表单输入内容

                           206                   :partial_content                  服务器已经成功处理了部分 GET 请求(客户端进行了范围请求),类似于想迅雷http瞎子啊这点断点续传和多个下载端同时下载。
                                                                                   响应报文中包含Content-Range指定范围的实体内容

重定向                     300                   :multiple_choices                 客户请求的文档可以在多个位置找到，这些位置已经在返回的文档内列出。
                                                                                   如果服务器要提出优先选择，则应该在Location应答头指明。

                           301                   :moved_permanently                永久重定向，表示请求的资源已经永久的搬到了其他位置，就是说资源已经被分配了新的URI 
                                                                                   新的URI应该提示在响应报文的Location首部字段 

                           302                   :found                            临时重定向，表示请求的资源临时搬到了其他位置 
                                                                                   和301很像，只不过资源是临时移动，资源在将来可能还会改变 
                                                                                   同样地，新的临时URI应该提示在响应报文的Location首部字段 

                           303                   :see_other                        表示请求资源存在另一个URI，应使用GET定向获取请求资源 303功能与302一样，区别只是303明确客户端应该使用GET访问

                           304                   :not_modified                     表示客户端发送附带条件的请求（GET方法请求报文中的IF…）时，条件不满足 返回304时，不包含任何响应主体
                                                                                   Request Header(例如)

                                                                                   If-Modified-Since: Wed, 06 Jun 2018 10:04:41 GMT    If-None-Match: "5b17b1b9-add"

                           305                   :use_proxy                        被请求的资源必须通过指定的代理才能被访问。Location 域中将给出指定的代理所在的 URI 信息，
                                                                                   接收者需要重复发送一个单独的请求，通过这个代理才能访问相应资源

                           307                   :temporary_redirect               临时重定向，和302有着相同含义 尽管302标准禁止POST变为GET，但没人听他的 而307就会遵照标准，不会从POST变为GET 

客户端错误                 400                   :bad_request                      请求报文存在语法错误或者参数错误，客户端理解不了，客户端不应该重复提交这个请求，除非修改请求内容

                           401                   :unauthorized                     表示发送的请求需要有HTTP认证信息或者是认证失败了返回401的响应必须包含一个适用于被请求资源的WWW-Authenticate首部以                                                                                     质询用户信息 

                           403                   :forbidden                        服务器已经理解请求，但是拒绝执行它，服务器可以对此作出解释，也可以不解释想说明的话可以在响应实体的主体部分描述原因 

                           404                   :not_found                        表示服务器找不到你请求的资源 也有可能服务器就是不想给你然后骗你找不到而且大多服务器都是这么玩这个状态码的

                           408                   :request_timeout                  请求超时

服务器端错误               500                   :internal_server_error            服务器出现故障
                           503                   Service Unavailable               服务器超负载或停机维护
                           509	                                                   服务器达到带宽限制











http状态码 200 （成功） 服务器已成功处理了请求。 通常，这表示服务器提供了请求的网页。
http状态码 201 （已创建） 请求成功并且服务器创建了新的资源。
http状态码 202 （已接受） 服务器已接受请求，但尚未处理。
http状态码 203 （非授权信息） 服务器已成功处理了请求，但返回的信息可能来自另一来源。
http状态码 204 （无内容） 服务器成功处理了请求，但没有返回任何内容。
http状态码 205 （重置内容） 服务器成功处理了请求，但没有返回任何内容。
http状态码 206 （部分内容） 服务器成功处理了部分 GET 请求。

http状态码 500 （服务器内部错误） 服务器遇到错误，无法完成请求。
http状态码 501 （尚未实施） 服务器不具备完成请求的功能。 例如，服务器无法识别请求方法时可能会返回此代码。
http状态码 502 （错误网关） 服务器作为网关或代理，从上游服务器收到无效响应。
http状态码 503 （服务不可用） 服务器目前无法使用（由于超载或停机维护）。 通常，这只是暂时状态。
http状态码 504 （网关超时） 服务器作为网关或代理，但是没有及时从上游服务器收到请求。
http状态码 505 （HTTP 版本不受支持） 服务器不支持请求中所用的 HTTP 协议版本。

                           